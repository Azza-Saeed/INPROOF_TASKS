
Timer_Led_Toggel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000068e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000068e  00000722  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  00000722  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000724  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00000df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000100  00000000  00000000  00000e78  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a14  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002ca  00000000  00000000  0000198c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003c3  00000000  00000000  00001c56  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000284  00000000  00000000  0000201c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000047b  00000000  00000000  000022a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005d8  00000000  00000000  0000271b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 1e 03 	jmp	0x63c	; 0x63c <__vector_10>
  2c:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e8       	ldi	r30, 0x8E	; 142
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 36       	cpi	r26, 0x64	; 100
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 b0 02 	call	0x560	; 0x560 <main>
  8a:	0c 94 45 03 	jmp	0x68a	; 0x68a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <App_Main>:
 */ 
#include "App.h"

void App_Main(void)
{
	dio_vidFlipChannel(DIO_PORTC,DIO_PIN1);
  92:	82 e0       	ldi	r24, 0x02	; 2
  94:	61 e0       	ldi	r22, 0x01	; 1
  96:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <dio_vidFlipChannel>
}
  9a:	08 95       	ret

0000009c <App_Init>:
void App_Init(void)
{
	dio_vidConfigChannel(DIO_PORTC,DIO_PIN1,OUTPUT);
  9c:	82 e0       	ldi	r24, 0x02	; 2
  9e:	61 e0       	ldi	r22, 0x01	; 1
  a0:	41 e0       	ldi	r20, 0x01	; 1
  a2:	0e 94 61 00 	call	0xc2	; 0xc2 <dio_vidConfigChannel>
	TIMER0_void_Init();
  a6:	0e 94 b5 02 	call	0x56a	; 0x56a <TIMER0_void_Init>
	TIMER0_void_SetCompareVal(COMPARE_VALUE);
  aa:	84 e6       	ldi	r24, 0x64	; 100
  ac:	0e 94 db 02 	call	0x5b6	; 0x5b6 <TIMER0_void_SetCompareVal>
	GIE_voidGlobalInterruptEnable();
  b0:	0e 94 a8 02 	call	0x550	; 0x550 <GIE_voidGlobalInterruptEnable>
	TIMER0_void_SetCTCCallBack(App_Main);
  b4:	89 e4       	ldi	r24, 0x49	; 73
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <TIMER0_void_SetCTCCallBack>
	TIMER0_void_EnableCTCInt();
  bc:	0e 94 e5 02 	call	0x5ca	; 0x5ca <TIMER0_void_EnableCTCInt>
  c0:	08 95       	ret

000000c2 <dio_vidConfigChannel>:
  c2:	81 30       	cpi	r24, 0x01	; 1
  c4:	31 f1       	breq	.+76     	; 0x112 <dio_vidConfigChannel+0x50>
  c6:	81 30       	cpi	r24, 0x01	; 1
  c8:	38 f0       	brcs	.+14     	; 0xd8 <dio_vidConfigChannel+0x16>
  ca:	82 30       	cpi	r24, 0x02	; 2
  cc:	09 f4       	brne	.+2      	; 0xd0 <dio_vidConfigChannel+0xe>
  ce:	3e c0       	rjmp	.+124    	; 0x14c <dio_vidConfigChannel+0x8a>
  d0:	83 30       	cpi	r24, 0x03	; 3
  d2:	09 f0       	breq	.+2      	; 0xd6 <dio_vidConfigChannel+0x14>
  d4:	74 c0       	rjmp	.+232    	; 0x1be <dio_vidConfigChannel+0xfc>
  d6:	57 c0       	rjmp	.+174    	; 0x186 <dio_vidConfigChannel+0xc4>
  d8:	41 30       	cpi	r20, 0x01	; 1
  da:	69 f4       	brne	.+26     	; 0xf6 <dio_vidConfigChannel+0x34>
  dc:	2a b3       	in	r18, 0x1a	; 26
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	ac 01       	movw	r20, r24
  e4:	02 c0       	rjmp	.+4      	; 0xea <dio_vidConfigChannel+0x28>
  e6:	44 0f       	add	r20, r20
  e8:	55 1f       	adc	r21, r21
  ea:	6a 95       	dec	r22
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <dio_vidConfigChannel+0x24>
  ee:	ba 01       	movw	r22, r20
  f0:	62 2b       	or	r22, r18
  f2:	6a bb       	out	0x1a, r22	; 26
  f4:	08 95       	ret
  f6:	2a b3       	in	r18, 0x1a	; 26
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	ac 01       	movw	r20, r24
  fe:	02 c0       	rjmp	.+4      	; 0x104 <dio_vidConfigChannel+0x42>
 100:	44 0f       	add	r20, r20
 102:	55 1f       	adc	r21, r21
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <dio_vidConfigChannel+0x3e>
 108:	ba 01       	movw	r22, r20
 10a:	60 95       	com	r22
 10c:	62 23       	and	r22, r18
 10e:	6a bb       	out	0x1a, r22	; 26
 110:	08 95       	ret
 112:	41 30       	cpi	r20, 0x01	; 1
 114:	69 f4       	brne	.+26     	; 0x130 <dio_vidConfigChannel+0x6e>
 116:	27 b3       	in	r18, 0x17	; 23
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	ac 01       	movw	r20, r24
 11e:	02 c0       	rjmp	.+4      	; 0x124 <dio_vidConfigChannel+0x62>
 120:	44 0f       	add	r20, r20
 122:	55 1f       	adc	r21, r21
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <dio_vidConfigChannel+0x5e>
 128:	ba 01       	movw	r22, r20
 12a:	62 2b       	or	r22, r18
 12c:	67 bb       	out	0x17, r22	; 23
 12e:	08 95       	ret
 130:	27 b3       	in	r18, 0x17	; 23
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	ac 01       	movw	r20, r24
 138:	02 c0       	rjmp	.+4      	; 0x13e <dio_vidConfigChannel+0x7c>
 13a:	44 0f       	add	r20, r20
 13c:	55 1f       	adc	r21, r21
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <dio_vidConfigChannel+0x78>
 142:	ba 01       	movw	r22, r20
 144:	60 95       	com	r22
 146:	62 23       	and	r22, r18
 148:	67 bb       	out	0x17, r22	; 23
 14a:	08 95       	ret
 14c:	41 30       	cpi	r20, 0x01	; 1
 14e:	69 f4       	brne	.+26     	; 0x16a <dio_vidConfigChannel+0xa8>
 150:	24 b3       	in	r18, 0x14	; 20
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	ac 01       	movw	r20, r24
 158:	02 c0       	rjmp	.+4      	; 0x15e <dio_vidConfigChannel+0x9c>
 15a:	44 0f       	add	r20, r20
 15c:	55 1f       	adc	r21, r21
 15e:	6a 95       	dec	r22
 160:	e2 f7       	brpl	.-8      	; 0x15a <dio_vidConfigChannel+0x98>
 162:	ba 01       	movw	r22, r20
 164:	62 2b       	or	r22, r18
 166:	64 bb       	out	0x14, r22	; 20
 168:	08 95       	ret
 16a:	24 b3       	in	r18, 0x14	; 20
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	ac 01       	movw	r20, r24
 172:	02 c0       	rjmp	.+4      	; 0x178 <dio_vidConfigChannel+0xb6>
 174:	44 0f       	add	r20, r20
 176:	55 1f       	adc	r21, r21
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <dio_vidConfigChannel+0xb2>
 17c:	ba 01       	movw	r22, r20
 17e:	60 95       	com	r22
 180:	62 23       	and	r22, r18
 182:	64 bb       	out	0x14, r22	; 20
 184:	08 95       	ret
 186:	41 30       	cpi	r20, 0x01	; 1
 188:	69 f4       	brne	.+26     	; 0x1a4 <dio_vidConfigChannel+0xe2>
 18a:	21 b3       	in	r18, 0x11	; 17
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	ac 01       	movw	r20, r24
 192:	02 c0       	rjmp	.+4      	; 0x198 <dio_vidConfigChannel+0xd6>
 194:	44 0f       	add	r20, r20
 196:	55 1f       	adc	r21, r21
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <dio_vidConfigChannel+0xd2>
 19c:	ba 01       	movw	r22, r20
 19e:	62 2b       	or	r22, r18
 1a0:	61 bb       	out	0x11, r22	; 17
 1a2:	08 95       	ret
 1a4:	21 b3       	in	r18, 0x11	; 17
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	ac 01       	movw	r20, r24
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <dio_vidConfigChannel+0xf0>
 1ae:	44 0f       	add	r20, r20
 1b0:	55 1f       	adc	r21, r21
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <dio_vidConfigChannel+0xec>
 1b6:	ba 01       	movw	r22, r20
 1b8:	60 95       	com	r22
 1ba:	62 23       	and	r22, r18
 1bc:	61 bb       	out	0x11, r22	; 17
 1be:	08 95       	ret

000001c0 <dio_vidConfigPort>:
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	49 f0       	breq	.+18     	; 0x1d6 <dio_vidConfigPort+0x16>
 1c4:	81 30       	cpi	r24, 0x01	; 1
 1c6:	28 f0       	brcs	.+10     	; 0x1d2 <dio_vidConfigPort+0x12>
 1c8:	82 30       	cpi	r24, 0x02	; 2
 1ca:	39 f0       	breq	.+14     	; 0x1da <dio_vidConfigPort+0x1a>
 1cc:	83 30       	cpi	r24, 0x03	; 3
 1ce:	41 f4       	brne	.+16     	; 0x1e0 <dio_vidConfigPort+0x20>
 1d0:	06 c0       	rjmp	.+12     	; 0x1de <dio_vidConfigPort+0x1e>
 1d2:	6a bb       	out	0x1a, r22	; 26
 1d4:	08 95       	ret
 1d6:	67 bb       	out	0x17, r22	; 23
 1d8:	08 95       	ret
 1da:	64 bb       	out	0x14, r22	; 20
 1dc:	08 95       	ret
 1de:	61 bb       	out	0x11, r22	; 17
 1e0:	08 95       	ret

000001e2 <dio_vidSetPortValue>:
 1e2:	81 30       	cpi	r24, 0x01	; 1
 1e4:	49 f0       	breq	.+18     	; 0x1f8 <dio_vidSetPortValue+0x16>
 1e6:	81 30       	cpi	r24, 0x01	; 1
 1e8:	28 f0       	brcs	.+10     	; 0x1f4 <dio_vidSetPortValue+0x12>
 1ea:	82 30       	cpi	r24, 0x02	; 2
 1ec:	39 f0       	breq	.+14     	; 0x1fc <dio_vidSetPortValue+0x1a>
 1ee:	83 30       	cpi	r24, 0x03	; 3
 1f0:	41 f4       	brne	.+16     	; 0x202 <dio_vidSetPortValue+0x20>
 1f2:	06 c0       	rjmp	.+12     	; 0x200 <dio_vidSetPortValue+0x1e>
 1f4:	6b bb       	out	0x1b, r22	; 27
 1f6:	08 95       	ret
 1f8:	68 bb       	out	0x18, r22	; 24
 1fa:	08 95       	ret
 1fc:	65 bb       	out	0x15, r22	; 21
 1fe:	08 95       	ret
 200:	62 bb       	out	0x12, r22	; 18
 202:	08 95       	ret

00000204 <dio_vidWriteChannel>:
 204:	81 30       	cpi	r24, 0x01	; 1
 206:	31 f1       	breq	.+76     	; 0x254 <dio_vidWriteChannel+0x50>
 208:	81 30       	cpi	r24, 0x01	; 1
 20a:	38 f0       	brcs	.+14     	; 0x21a <dio_vidWriteChannel+0x16>
 20c:	82 30       	cpi	r24, 0x02	; 2
 20e:	09 f4       	brne	.+2      	; 0x212 <dio_vidWriteChannel+0xe>
 210:	3e c0       	rjmp	.+124    	; 0x28e <dio_vidWriteChannel+0x8a>
 212:	83 30       	cpi	r24, 0x03	; 3
 214:	09 f0       	breq	.+2      	; 0x218 <dio_vidWriteChannel+0x14>
 216:	74 c0       	rjmp	.+232    	; 0x300 <dio_vidWriteChannel+0xfc>
 218:	57 c0       	rjmp	.+174    	; 0x2c8 <dio_vidWriteChannel+0xc4>
 21a:	44 23       	and	r20, r20
 21c:	71 f4       	brne	.+28     	; 0x23a <dio_vidWriteChannel+0x36>
 21e:	2b b3       	in	r18, 0x1b	; 27
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	ac 01       	movw	r20, r24
 226:	02 c0       	rjmp	.+4      	; 0x22c <dio_vidWriteChannel+0x28>
 228:	44 0f       	add	r20, r20
 22a:	55 1f       	adc	r21, r21
 22c:	6a 95       	dec	r22
 22e:	e2 f7       	brpl	.-8      	; 0x228 <dio_vidWriteChannel+0x24>
 230:	ba 01       	movw	r22, r20
 232:	60 95       	com	r22
 234:	62 23       	and	r22, r18
 236:	6b bb       	out	0x1b, r22	; 27
 238:	08 95       	ret
 23a:	2b b3       	in	r18, 0x1b	; 27
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	ac 01       	movw	r20, r24
 242:	02 c0       	rjmp	.+4      	; 0x248 <dio_vidWriteChannel+0x44>
 244:	44 0f       	add	r20, r20
 246:	55 1f       	adc	r21, r21
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <dio_vidWriteChannel+0x40>
 24c:	ba 01       	movw	r22, r20
 24e:	62 2b       	or	r22, r18
 250:	6b bb       	out	0x1b, r22	; 27
 252:	08 95       	ret
 254:	44 23       	and	r20, r20
 256:	71 f4       	brne	.+28     	; 0x274 <dio_vidWriteChannel+0x70>
 258:	28 b3       	in	r18, 0x18	; 24
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	ac 01       	movw	r20, r24
 260:	02 c0       	rjmp	.+4      	; 0x266 <dio_vidWriteChannel+0x62>
 262:	44 0f       	add	r20, r20
 264:	55 1f       	adc	r21, r21
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <dio_vidWriteChannel+0x5e>
 26a:	ba 01       	movw	r22, r20
 26c:	60 95       	com	r22
 26e:	62 23       	and	r22, r18
 270:	68 bb       	out	0x18, r22	; 24
 272:	08 95       	ret
 274:	28 b3       	in	r18, 0x18	; 24
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	ac 01       	movw	r20, r24
 27c:	02 c0       	rjmp	.+4      	; 0x282 <dio_vidWriteChannel+0x7e>
 27e:	44 0f       	add	r20, r20
 280:	55 1f       	adc	r21, r21
 282:	6a 95       	dec	r22
 284:	e2 f7       	brpl	.-8      	; 0x27e <dio_vidWriteChannel+0x7a>
 286:	ba 01       	movw	r22, r20
 288:	62 2b       	or	r22, r18
 28a:	68 bb       	out	0x18, r22	; 24
 28c:	08 95       	ret
 28e:	44 23       	and	r20, r20
 290:	71 f4       	brne	.+28     	; 0x2ae <dio_vidWriteChannel+0xaa>
 292:	25 b3       	in	r18, 0x15	; 21
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	ac 01       	movw	r20, r24
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <dio_vidWriteChannel+0x9c>
 29c:	44 0f       	add	r20, r20
 29e:	55 1f       	adc	r21, r21
 2a0:	6a 95       	dec	r22
 2a2:	e2 f7       	brpl	.-8      	; 0x29c <dio_vidWriteChannel+0x98>
 2a4:	ba 01       	movw	r22, r20
 2a6:	60 95       	com	r22
 2a8:	62 23       	and	r22, r18
 2aa:	65 bb       	out	0x15, r22	; 21
 2ac:	08 95       	ret
 2ae:	25 b3       	in	r18, 0x15	; 21
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	ac 01       	movw	r20, r24
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <dio_vidWriteChannel+0xb8>
 2b8:	44 0f       	add	r20, r20
 2ba:	55 1f       	adc	r21, r21
 2bc:	6a 95       	dec	r22
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <dio_vidWriteChannel+0xb4>
 2c0:	ba 01       	movw	r22, r20
 2c2:	62 2b       	or	r22, r18
 2c4:	65 bb       	out	0x15, r22	; 21
 2c6:	08 95       	ret
 2c8:	44 23       	and	r20, r20
 2ca:	71 f4       	brne	.+28     	; 0x2e8 <dio_vidWriteChannel+0xe4>
 2cc:	22 b3       	in	r18, 0x12	; 18
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	ac 01       	movw	r20, r24
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <dio_vidWriteChannel+0xd6>
 2d6:	44 0f       	add	r20, r20
 2d8:	55 1f       	adc	r21, r21
 2da:	6a 95       	dec	r22
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <dio_vidWriteChannel+0xd2>
 2de:	ba 01       	movw	r22, r20
 2e0:	60 95       	com	r22
 2e2:	62 23       	and	r22, r18
 2e4:	62 bb       	out	0x12, r22	; 18
 2e6:	08 95       	ret
 2e8:	22 b3       	in	r18, 0x12	; 18
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	ac 01       	movw	r20, r24
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <dio_vidWriteChannel+0xf2>
 2f2:	44 0f       	add	r20, r20
 2f4:	55 1f       	adc	r21, r21
 2f6:	6a 95       	dec	r22
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <dio_vidWriteChannel+0xee>
 2fa:	ba 01       	movw	r22, r20
 2fc:	62 2b       	or	r22, r18
 2fe:	62 bb       	out	0x12, r22	; 18
 300:	08 95       	ret

00000302 <dio_vidWriteChannelGroup>:
 302:	81 30       	cpi	r24, 0x01	; 1
 304:	c1 f0       	breq	.+48     	; 0x336 <dio_vidWriteChannelGroup+0x34>
 306:	81 30       	cpi	r24, 0x01	; 1
 308:	30 f0       	brcs	.+12     	; 0x316 <dio_vidWriteChannelGroup+0x14>
 30a:	82 30       	cpi	r24, 0x02	; 2
 30c:	19 f1       	breq	.+70     	; 0x354 <dio_vidWriteChannelGroup+0x52>
 30e:	83 30       	cpi	r24, 0x03	; 3
 310:	09 f0       	breq	.+2      	; 0x314 <dio_vidWriteChannelGroup+0x12>
 312:	3e c0       	rjmp	.+124    	; 0x390 <dio_vidWriteChannelGroup+0x8e>
 314:	2e c0       	rjmp	.+92     	; 0x372 <dio_vidWriteChannelGroup+0x70>
 316:	8b b3       	in	r24, 0x1b	; 27
 318:	94 2f       	mov	r25, r20
 31a:	90 95       	com	r25
 31c:	89 23       	and	r24, r25
 31e:	8b bb       	out	0x1b, r24	; 27
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	cb 01       	movw	r24, r22
 324:	02 c0       	rjmp	.+4      	; 0x32a <dio_vidWriteChannelGroup+0x28>
 326:	88 0f       	add	r24, r24
 328:	99 1f       	adc	r25, r25
 32a:	2a 95       	dec	r18
 32c:	e2 f7       	brpl	.-8      	; 0x326 <dio_vidWriteChannelGroup+0x24>
 32e:	9c 01       	movw	r18, r24
 330:	24 23       	and	r18, r20
 332:	2b bb       	out	0x1b, r18	; 27
 334:	08 95       	ret
 336:	88 b3       	in	r24, 0x18	; 24
 338:	94 2f       	mov	r25, r20
 33a:	90 95       	com	r25
 33c:	89 23       	and	r24, r25
 33e:	88 bb       	out	0x18, r24	; 24
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	fb 01       	movw	r30, r22
 344:	02 c0       	rjmp	.+4      	; 0x34a <dio_vidWriteChannelGroup+0x48>
 346:	ee 0f       	add	r30, r30
 348:	ff 1f       	adc	r31, r31
 34a:	2a 95       	dec	r18
 34c:	e2 f7       	brpl	.-8      	; 0x346 <dio_vidWriteChannelGroup+0x44>
 34e:	e4 23       	and	r30, r20
 350:	e8 bb       	out	0x18, r30	; 24
 352:	08 95       	ret
 354:	85 b3       	in	r24, 0x15	; 21
 356:	94 2f       	mov	r25, r20
 358:	90 95       	com	r25
 35a:	89 23       	and	r24, r25
 35c:	85 bb       	out	0x15, r24	; 21
 35e:	70 e0       	ldi	r23, 0x00	; 0
 360:	cb 01       	movw	r24, r22
 362:	02 c0       	rjmp	.+4      	; 0x368 <dio_vidWriteChannelGroup+0x66>
 364:	88 0f       	add	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	2a 95       	dec	r18
 36a:	e2 f7       	brpl	.-8      	; 0x364 <dio_vidWriteChannelGroup+0x62>
 36c:	84 23       	and	r24, r20
 36e:	85 bb       	out	0x15, r24	; 21
 370:	08 95       	ret
 372:	82 b3       	in	r24, 0x12	; 18
 374:	94 2f       	mov	r25, r20
 376:	90 95       	com	r25
 378:	89 23       	and	r24, r25
 37a:	82 bb       	out	0x12, r24	; 18
 37c:	70 e0       	ldi	r23, 0x00	; 0
 37e:	cb 01       	movw	r24, r22
 380:	02 c0       	rjmp	.+4      	; 0x386 <dio_vidWriteChannelGroup+0x84>
 382:	88 0f       	add	r24, r24
 384:	99 1f       	adc	r25, r25
 386:	2a 95       	dec	r18
 388:	e2 f7       	brpl	.-8      	; 0x382 <dio_vidWriteChannelGroup+0x80>
 38a:	9c 01       	movw	r18, r24
 38c:	24 23       	and	r18, r20
 38e:	22 bb       	out	0x12, r18	; 18
 390:	08 95       	ret

00000392 <dio_vidReadChannelGroup>:
 392:	68 23       	and	r22, r24
 394:	70 e0       	ldi	r23, 0x00	; 0
 396:	cb 01       	movw	r24, r22
 398:	02 c0       	rjmp	.+4      	; 0x39e <dio_vidReadChannelGroup+0xc>
 39a:	95 95       	asr	r25
 39c:	87 95       	ror	r24
 39e:	4a 95       	dec	r20
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <dio_vidReadChannelGroup+0x8>
 3a2:	08 95       	ret

000003a4 <dio_vidFlipChannel>:
 3a4:	81 30       	cpi	r24, 0x01	; 1
 3a6:	a1 f0       	breq	.+40     	; 0x3d0 <dio_vidFlipChannel+0x2c>
 3a8:	81 30       	cpi	r24, 0x01	; 1
 3aa:	28 f0       	brcs	.+10     	; 0x3b6 <dio_vidFlipChannel+0x12>
 3ac:	82 30       	cpi	r24, 0x02	; 2
 3ae:	e9 f0       	breq	.+58     	; 0x3ea <dio_vidFlipChannel+0x46>
 3b0:	83 30       	cpi	r24, 0x03	; 3
 3b2:	a1 f5       	brne	.+104    	; 0x41c <dio_vidFlipChannel+0x78>
 3b4:	27 c0       	rjmp	.+78     	; 0x404 <dio_vidFlipChannel+0x60>
 3b6:	2b b3       	in	r18, 0x1b	; 27
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	ac 01       	movw	r20, r24
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <dio_vidFlipChannel+0x20>
 3c0:	44 0f       	add	r20, r20
 3c2:	55 1f       	adc	r21, r21
 3c4:	6a 95       	dec	r22
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <dio_vidFlipChannel+0x1c>
 3c8:	ba 01       	movw	r22, r20
 3ca:	62 27       	eor	r22, r18
 3cc:	6b bb       	out	0x1b, r22	; 27
 3ce:	08 95       	ret
 3d0:	28 b3       	in	r18, 0x18	; 24
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	ac 01       	movw	r20, r24
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <dio_vidFlipChannel+0x3a>
 3da:	44 0f       	add	r20, r20
 3dc:	55 1f       	adc	r21, r21
 3de:	6a 95       	dec	r22
 3e0:	e2 f7       	brpl	.-8      	; 0x3da <dio_vidFlipChannel+0x36>
 3e2:	ba 01       	movw	r22, r20
 3e4:	62 27       	eor	r22, r18
 3e6:	68 bb       	out	0x18, r22	; 24
 3e8:	08 95       	ret
 3ea:	25 b3       	in	r18, 0x15	; 21
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	ac 01       	movw	r20, r24
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <dio_vidFlipChannel+0x54>
 3f4:	44 0f       	add	r20, r20
 3f6:	55 1f       	adc	r21, r21
 3f8:	6a 95       	dec	r22
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <dio_vidFlipChannel+0x50>
 3fc:	ba 01       	movw	r22, r20
 3fe:	62 27       	eor	r22, r18
 400:	65 bb       	out	0x15, r22	; 21
 402:	08 95       	ret
 404:	22 b3       	in	r18, 0x12	; 18
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	ac 01       	movw	r20, r24
 40c:	02 c0       	rjmp	.+4      	; 0x412 <dio_vidFlipChannel+0x6e>
 40e:	44 0f       	add	r20, r20
 410:	55 1f       	adc	r21, r21
 412:	6a 95       	dec	r22
 414:	e2 f7       	brpl	.-8      	; 0x40e <dio_vidFlipChannel+0x6a>
 416:	ba 01       	movw	r22, r20
 418:	62 27       	eor	r22, r18
 41a:	62 bb       	out	0x12, r22	; 18
 41c:	08 95       	ret

0000041e <dio_dioLevelReadChannel>:
 41e:	81 30       	cpi	r24, 0x01	; 1
 420:	89 f0       	breq	.+34     	; 0x444 <dio_dioLevelReadChannel+0x26>
 422:	81 30       	cpi	r24, 0x01	; 1
 424:	28 f0       	brcs	.+10     	; 0x430 <dio_dioLevelReadChannel+0x12>
 426:	82 30       	cpi	r24, 0x02	; 2
 428:	b9 f0       	breq	.+46     	; 0x458 <dio_dioLevelReadChannel+0x3a>
 42a:	83 30       	cpi	r24, 0x03	; 3
 42c:	49 f5       	brne	.+82     	; 0x480 <dio_dioLevelReadChannel+0x62>
 42e:	1e c0       	rjmp	.+60     	; 0x46c <dio_dioLevelReadChannel+0x4e>
 430:	29 b3       	in	r18, 0x19	; 25
 432:	30 e0       	ldi	r19, 0x00	; 0
 434:	c9 01       	movw	r24, r18
 436:	02 c0       	rjmp	.+4      	; 0x43c <dio_dioLevelReadChannel+0x1e>
 438:	95 95       	asr	r25
 43a:	87 95       	ror	r24
 43c:	6a 95       	dec	r22
 43e:	e2 f7       	brpl	.-8      	; 0x438 <dio_dioLevelReadChannel+0x1a>
 440:	81 70       	andi	r24, 0x01	; 1
 442:	08 95       	ret
 444:	26 b3       	in	r18, 0x16	; 22
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	c9 01       	movw	r24, r18
 44a:	02 c0       	rjmp	.+4      	; 0x450 <dio_dioLevelReadChannel+0x32>
 44c:	95 95       	asr	r25
 44e:	87 95       	ror	r24
 450:	6a 95       	dec	r22
 452:	e2 f7       	brpl	.-8      	; 0x44c <dio_dioLevelReadChannel+0x2e>
 454:	81 70       	andi	r24, 0x01	; 1
 456:	08 95       	ret
 458:	23 b3       	in	r18, 0x13	; 19
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	c9 01       	movw	r24, r18
 45e:	02 c0       	rjmp	.+4      	; 0x464 <dio_dioLevelReadChannel+0x46>
 460:	95 95       	asr	r25
 462:	87 95       	ror	r24
 464:	6a 95       	dec	r22
 466:	e2 f7       	brpl	.-8      	; 0x460 <dio_dioLevelReadChannel+0x42>
 468:	81 70       	andi	r24, 0x01	; 1
 46a:	08 95       	ret
 46c:	20 b3       	in	r18, 0x10	; 16
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	c9 01       	movw	r24, r18
 472:	02 c0       	rjmp	.+4      	; 0x478 <dio_dioLevelReadChannel+0x5a>
 474:	95 95       	asr	r25
 476:	87 95       	ror	r24
 478:	6a 95       	dec	r22
 47a:	e2 f7       	brpl	.-8      	; 0x474 <dio_dioLevelReadChannel+0x56>
 47c:	81 70       	andi	r24, 0x01	; 1
 47e:	08 95       	ret
 480:	80 e0       	ldi	r24, 0x00	; 0
 482:	08 95       	ret

00000484 <dio_vidEnablePullUp>:
 484:	81 30       	cpi	r24, 0x01	; 1
 486:	f9 f0       	breq	.+62     	; 0x4c6 <dio_vidEnablePullUp+0x42>
 488:	81 30       	cpi	r24, 0x01	; 1
 48a:	30 f0       	brcs	.+12     	; 0x498 <dio_vidEnablePullUp+0x14>
 48c:	82 30       	cpi	r24, 0x02	; 2
 48e:	91 f1       	breq	.+100    	; 0x4f4 <dio_vidEnablePullUp+0x70>
 490:	83 30       	cpi	r24, 0x03	; 3
 492:	09 f0       	breq	.+2      	; 0x496 <dio_vidEnablePullUp+0x12>
 494:	5c c0       	rjmp	.+184    	; 0x54e <dio_vidEnablePullUp+0xca>
 496:	45 c0       	rjmp	.+138    	; 0x522 <dio_vidEnablePullUp+0x9e>
 498:	8a b3       	in	r24, 0x1a	; 26
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	06 2e       	mov	r0, r22
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <dio_vidEnablePullUp+0x20>
 4a0:	95 95       	asr	r25
 4a2:	87 95       	ror	r24
 4a4:	0a 94       	dec	r0
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <dio_vidEnablePullUp+0x1c>
 4a8:	80 fd       	sbrc	r24, 0
 4aa:	51 c0       	rjmp	.+162    	; 0x54e <dio_vidEnablePullUp+0xca>
 4ac:	2b b3       	in	r18, 0x1b	; 27
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	ac 01       	movw	r20, r24
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <dio_vidEnablePullUp+0x36>
 4b6:	44 0f       	add	r20, r20
 4b8:	55 1f       	adc	r21, r21
 4ba:	6a 95       	dec	r22
 4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <dio_vidEnablePullUp+0x32>
 4be:	ba 01       	movw	r22, r20
 4c0:	62 2b       	or	r22, r18
 4c2:	6b bb       	out	0x1b, r22	; 27
 4c4:	08 95       	ret
 4c6:	87 b3       	in	r24, 0x17	; 23
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	06 2e       	mov	r0, r22
 4cc:	02 c0       	rjmp	.+4      	; 0x4d2 <dio_vidEnablePullUp+0x4e>
 4ce:	95 95       	asr	r25
 4d0:	87 95       	ror	r24
 4d2:	0a 94       	dec	r0
 4d4:	e2 f7       	brpl	.-8      	; 0x4ce <dio_vidEnablePullUp+0x4a>
 4d6:	80 fd       	sbrc	r24, 0
 4d8:	3a c0       	rjmp	.+116    	; 0x54e <dio_vidEnablePullUp+0xca>
 4da:	28 b3       	in	r18, 0x18	; 24
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	ac 01       	movw	r20, r24
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <dio_vidEnablePullUp+0x64>
 4e4:	44 0f       	add	r20, r20
 4e6:	55 1f       	adc	r21, r21
 4e8:	6a 95       	dec	r22
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <dio_vidEnablePullUp+0x60>
 4ec:	ba 01       	movw	r22, r20
 4ee:	62 2b       	or	r22, r18
 4f0:	68 bb       	out	0x18, r22	; 24
 4f2:	08 95       	ret
 4f4:	84 b3       	in	r24, 0x14	; 20
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	06 2e       	mov	r0, r22
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <dio_vidEnablePullUp+0x7c>
 4fc:	95 95       	asr	r25
 4fe:	87 95       	ror	r24
 500:	0a 94       	dec	r0
 502:	e2 f7       	brpl	.-8      	; 0x4fc <dio_vidEnablePullUp+0x78>
 504:	80 fd       	sbrc	r24, 0
 506:	23 c0       	rjmp	.+70     	; 0x54e <dio_vidEnablePullUp+0xca>
 508:	25 b3       	in	r18, 0x15	; 21
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	ac 01       	movw	r20, r24
 510:	02 c0       	rjmp	.+4      	; 0x516 <dio_vidEnablePullUp+0x92>
 512:	44 0f       	add	r20, r20
 514:	55 1f       	adc	r21, r21
 516:	6a 95       	dec	r22
 518:	e2 f7       	brpl	.-8      	; 0x512 <dio_vidEnablePullUp+0x8e>
 51a:	ba 01       	movw	r22, r20
 51c:	62 2b       	or	r22, r18
 51e:	65 bb       	out	0x15, r22	; 21
 520:	08 95       	ret
 522:	81 b3       	in	r24, 0x11	; 17
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	06 2e       	mov	r0, r22
 528:	02 c0       	rjmp	.+4      	; 0x52e <dio_vidEnablePullUp+0xaa>
 52a:	95 95       	asr	r25
 52c:	87 95       	ror	r24
 52e:	0a 94       	dec	r0
 530:	e2 f7       	brpl	.-8      	; 0x52a <dio_vidEnablePullUp+0xa6>
 532:	80 fd       	sbrc	r24, 0
 534:	0c c0       	rjmp	.+24     	; 0x54e <dio_vidEnablePullUp+0xca>
 536:	22 b3       	in	r18, 0x12	; 18
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	ac 01       	movw	r20, r24
 53e:	02 c0       	rjmp	.+4      	; 0x544 <dio_vidEnablePullUp+0xc0>
 540:	44 0f       	add	r20, r20
 542:	55 1f       	adc	r21, r21
 544:	6a 95       	dec	r22
 546:	e2 f7       	brpl	.-8      	; 0x540 <dio_vidEnablePullUp+0xbc>
 548:	ba 01       	movw	r22, r20
 54a:	62 2b       	or	r22, r18
 54c:	62 bb       	out	0x12, r22	; 18
 54e:	08 95       	ret

00000550 <GIE_voidGlobalInterruptEnable>:
 550:	8f b7       	in	r24, 0x3f	; 63
 552:	80 68       	ori	r24, 0x80	; 128
 554:	8f bf       	out	0x3f, r24	; 63
 556:	08 95       	ret

00000558 <GIE_voidGlobalInterruptDisable>:
 558:	8f b7       	in	r24, 0x3f	; 63
 55a:	8f 77       	andi	r24, 0x7F	; 127
 55c:	8f bf       	out	0x3f, r24	; 63
 55e:	08 95       	ret

00000560 <main>:

#include "App.h"

int main(void)
{
	App_Init();
 560:	0e 94 4e 00 	call	0x9c	; 0x9c <App_Init>
    while(1)
    {
        App_Main();
 564:	0e 94 49 00 	call	0x92	; 0x92 <App_Main>
 568:	fd cf       	rjmp	.-6      	; 0x564 <main+0x4>

0000056a <TIMER0_void_Init>:
	#if(TIMER0_MODE == TIMER0_NORMAL)
		CLEAR_BIT(TCCR0 , 6);
		CLEAR_BIT(TCCR0 , 3);
	
	#elif(TIMER0_MODE == TIMER0_CTC)
		CLEAR_BIT(TCCR0 , 6);
 56a:	83 b7       	in	r24, 0x33	; 51
 56c:	8f 7b       	andi	r24, 0xBF	; 191
 56e:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0 , 3);
 570:	83 b7       	in	r24, 0x33	; 51
 572:	88 60       	ori	r24, 0x08	; 8
 574:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0 , 0);
		CLEAR_BIT(TCCR0 , 1);
		CLEAR_BIT(TCCR0 , 2);
	
	#elif(TIMER0_PRESCALER == TIMER0_DIV_BY_8)
		CLEAR_BIT(TCCR0 , 0);
 576:	83 b7       	in	r24, 0x33	; 51
 578:	8e 7f       	andi	r24, 0xFE	; 254
 57a:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0 , 1);
 57c:	83 b7       	in	r24, 0x33	; 51
 57e:	82 60       	ori	r24, 0x02	; 2
 580:	83 bf       	out	0x33, r24	; 51
		CLEAR_BIT(TCCR0 , 2);
 582:	83 b7       	in	r24, 0x33	; 51
 584:	8b 7f       	andi	r24, 0xFB	; 251
 586:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0 , 2);
		
	#endif
	
	#if(TIMER0_COM_EVENT == TIMER0_NO_ACTION)
		CLEAR_BIT(TCCR0 , 4);
 588:	83 b7       	in	r24, 0x33	; 51
 58a:	8f 7e       	andi	r24, 0xEF	; 239
 58c:	83 bf       	out	0x33, r24	; 51
		CLEAR_BIT(TCCR0 , 5);
 58e:	83 b7       	in	r24, 0x33	; 51
 590:	8f 7d       	andi	r24, 0xDF	; 223
 592:	83 bf       	out	0x33, r24	; 51
		SET_BIT(TCCR0 , 5);

		
	#endif
	/*Disable Interrupts*/
	CLEAR_BIT(TIMSK , 0);	
 594:	89 b7       	in	r24, 0x39	; 57
 596:	8e 7f       	andi	r24, 0xFE	; 254
 598:	89 bf       	out	0x39, r24	; 57
	CLEAR_BIT(TIMSK , 1);
 59a:	89 b7       	in	r24, 0x39	; 57
 59c:	8d 7f       	andi	r24, 0xFD	; 253
 59e:	89 bf       	out	0x39, r24	; 57
	/*CLEAR FLAGS*/
	SET_BIT(TIFR , 0);	
 5a0:	88 b7       	in	r24, 0x38	; 56
 5a2:	81 60       	ori	r24, 0x01	; 1
 5a4:	88 bf       	out	0x38, r24	; 56
	SET_BIT(TIFR , 1);
 5a6:	88 b7       	in	r24, 0x38	; 56
 5a8:	82 60       	ori	r24, 0x02	; 2
 5aa:	88 bf       	out	0x38, r24	; 56
	/*Clear register*/
	TCNT0 = 0 ;
 5ac:	12 be       	out	0x32, r1	; 50
	OCR0 = 0 ;
 5ae:	1c be       	out	0x3c, r1	; 60
	
	
}
 5b0:	08 95       	ret

000005b2 <TIMER0_void_SetTimerReg>:

void TIMER0_void_SetTimerReg(u8 Copy_uint8Val)
{
	TCNT0 = Copy_uint8Val ;
 5b2:	82 bf       	out	0x32, r24	; 50
}
 5b4:	08 95       	ret

000005b6 <TIMER0_void_SetCompareVal>:

void TIMER0_void_SetCompareVal(u8 Copy_uint8Val)
{
	OCR0 = Copy_uint8Val ;
 5b6:	8c bf       	out	0x3c, r24	; 60
}
 5b8:	08 95       	ret

000005ba <TIMER0_void_EnableOVInt>:

void TIMER0_void_EnableOVInt(void)
{
	SET_BIT(TIMSK , 0);
 5ba:	89 b7       	in	r24, 0x39	; 57
 5bc:	81 60       	ori	r24, 0x01	; 1
 5be:	89 bf       	out	0x39, r24	; 57
}
 5c0:	08 95       	ret

000005c2 <TIMER0_void_DisableOVInt>:

void TIMER0_void_DisableOVInt(void)
{
	CLEAR_BIT(TIMSK , 0);
 5c2:	89 b7       	in	r24, 0x39	; 57
 5c4:	8e 7f       	andi	r24, 0xFE	; 254
 5c6:	89 bf       	out	0x39, r24	; 57
}
 5c8:	08 95       	ret

000005ca <TIMER0_void_EnableCTCInt>:

void TIMER0_void_EnableCTCInt(void)
{
	SET_BIT(TIMSK , 1);
 5ca:	89 b7       	in	r24, 0x39	; 57
 5cc:	82 60       	ori	r24, 0x02	; 2
 5ce:	89 bf       	out	0x39, r24	; 57
}
 5d0:	08 95       	ret

000005d2 <TIMER0_void_DisableCTCInt>:

void TIMER0_void_DisableCTCInt(void)
{
	CLEAR_BIT(TIMSK , 1);
 5d2:	89 b7       	in	r24, 0x39	; 57
 5d4:	8d 7f       	andi	r24, 0xFD	; 253
 5d6:	89 bf       	out	0x39, r24	; 57
}
 5d8:	08 95       	ret

000005da <TIMER0_void_SetOVCallBack>:

void TIMER0_void_SetOVCallBack(void (*Copy_ptr) (void) ) 
{
	TIMER0_OV_CallBack = Copy_ptr ;
 5da:	90 93 63 00 	sts	0x0063, r25
 5de:	80 93 62 00 	sts	0x0062, r24
}
 5e2:	08 95       	ret

000005e4 <TIMER0_void_SetCTCCallBack>:

void TIMER0_void_SetCTCCallBack(void (*Copy_ptr) (void) ) 
{
	TIMER0_CTC_CallBack = Copy_ptr ;
 5e4:	90 93 61 00 	sts	0x0061, r25
 5e8:	80 93 60 00 	sts	0x0060, r24
	
}
 5ec:	08 95       	ret

000005ee <__vector_11>:

void __vector_11(void) __attribute__((signal , used));
void __vector_11(void)
{
 5ee:	1f 92       	push	r1
 5f0:	0f 92       	push	r0
 5f2:	0f b6       	in	r0, 0x3f	; 63
 5f4:	0f 92       	push	r0
 5f6:	11 24       	eor	r1, r1
 5f8:	2f 93       	push	r18
 5fa:	3f 93       	push	r19
 5fc:	4f 93       	push	r20
 5fe:	5f 93       	push	r21
 600:	6f 93       	push	r22
 602:	7f 93       	push	r23
 604:	8f 93       	push	r24
 606:	9f 93       	push	r25
 608:	af 93       	push	r26
 60a:	bf 93       	push	r27
 60c:	ef 93       	push	r30
 60e:	ff 93       	push	r31
	
	TIMER0_OV_CallBack();
 610:	e0 91 62 00 	lds	r30, 0x0062
 614:	f0 91 63 00 	lds	r31, 0x0063
 618:	09 95       	icall
}
 61a:	ff 91       	pop	r31
 61c:	ef 91       	pop	r30
 61e:	bf 91       	pop	r27
 620:	af 91       	pop	r26
 622:	9f 91       	pop	r25
 624:	8f 91       	pop	r24
 626:	7f 91       	pop	r23
 628:	6f 91       	pop	r22
 62a:	5f 91       	pop	r21
 62c:	4f 91       	pop	r20
 62e:	3f 91       	pop	r19
 630:	2f 91       	pop	r18
 632:	0f 90       	pop	r0
 634:	0f be       	out	0x3f, r0	; 63
 636:	0f 90       	pop	r0
 638:	1f 90       	pop	r1
 63a:	18 95       	reti

0000063c <__vector_10>:

void __vector_10(void) __attribute__((signal , used));
void __vector_10(void)
{
 63c:	1f 92       	push	r1
 63e:	0f 92       	push	r0
 640:	0f b6       	in	r0, 0x3f	; 63
 642:	0f 92       	push	r0
 644:	11 24       	eor	r1, r1
 646:	2f 93       	push	r18
 648:	3f 93       	push	r19
 64a:	4f 93       	push	r20
 64c:	5f 93       	push	r21
 64e:	6f 93       	push	r22
 650:	7f 93       	push	r23
 652:	8f 93       	push	r24
 654:	9f 93       	push	r25
 656:	af 93       	push	r26
 658:	bf 93       	push	r27
 65a:	ef 93       	push	r30
 65c:	ff 93       	push	r31
	
	TIMER0_CTC_CallBack();
 65e:	e0 91 60 00 	lds	r30, 0x0060
 662:	f0 91 61 00 	lds	r31, 0x0061
 666:	09 95       	icall
}
 668:	ff 91       	pop	r31
 66a:	ef 91       	pop	r30
 66c:	bf 91       	pop	r27
 66e:	af 91       	pop	r26
 670:	9f 91       	pop	r25
 672:	8f 91       	pop	r24
 674:	7f 91       	pop	r23
 676:	6f 91       	pop	r22
 678:	5f 91       	pop	r21
 67a:	4f 91       	pop	r20
 67c:	3f 91       	pop	r19
 67e:	2f 91       	pop	r18
 680:	0f 90       	pop	r0
 682:	0f be       	out	0x3f, r0	; 63
 684:	0f 90       	pop	r0
 686:	1f 90       	pop	r1
 688:	18 95       	reti

0000068a <_exit>:
 68a:	f8 94       	cli

0000068c <__stop_program>:
 68c:	ff cf       	rjmp	.-2      	; 0x68c <__stop_program>
